apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'nexus'
apply plugin: 'codenarc'
apply plugin: 'java-gradle-plugin'

def compatibilityVersion = 1.7
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion
group = 'org.gradle.api.plugins'
version = '0.5'

buildscript {
	repositories {
        jcenter()
		mavenCentral()
	}

	dependencies {
		classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compile localGroovy(),
		gradleApi(),
		'com.google.appengine:gradle-appengine-plugin:1.9.34'
	compile('org.gebish:geb-core:0.13.1') {
		exclude group: 'org.codehaus.groovy'
	}
	testCompile gradleTestKit()
	testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
		exclude group: 'org.codehaus.groovy'
	}
	codenarc 'org.codenarc:CodeNarc:0.20'
}

idea {
	workspace {
		iws.withXml { provider ->
			def node = provider.asNode()
			def runManager = node.component.find { it.'@name' == 'RunManager' }

			def defaultJUnitConf = runManager.configuration.find { it.'@default' == 'true' && it.'@type' == 'JUnit' }

			defaultJUnitConf.method.replaceNode {
				method {
					option(name: "Gradle.BeforeRunTask", enabled: true, tasks: "pluginUnderTestMetadata", externalProjectPath: '$PROJECT_DIR$/build.gradle')
					option(name: "Make", enabled: true)
				}
			}
		}
	}

	project {
		jdkName = '1.7'
		vcs = 'Git'

		ipr.withXml { provider ->
			def node = provider.asNode()
			node.append(new XmlParser().parse(file("gradle/idea/gradle.xml")))
		}
	}
}

jar {
	manifest {
		attributes 'Implementation-Title': 'Gradle GAE Geb integration plugin',
				'Implementation-Version': version,
				'Built-By': System.getProperty('user.name'),
				'Built-Date': new Date(),
				'Built-JDK': System.getProperty('java.version'),
				'Built-Gradle': gradle.gradleVersion
	}
}

modifyPom {
	project {
		name 'Gradle GAE Geb integration plugin'
		description 'Simple Gradle plugin that provides integration between Gradle GAE plugin and Geb browser automation framework.'
		url 'https://github.com/erdi/gradle-gae-geb-plugin'
		inceptionYear '2012'

		scm {
			url 'https://github.com/erdi/gradle-gae-geb-plugin'
			connection 'scm:git://github.com/erdi/gradle-gae-geb-plugin.git'
			developerConnection 'scm:git@github.com:erdi/gradle-gae-geb-plugin.git'
		}

		licenses {
			license {
				name 'The Apache Software License, Version 2.0'
				url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
				distribution 'repo'
			}
		}

		developers {
			developer {
				id 'erdi'
				name 'Marcin Erdmann'
				email 'marcin.erdmann@proxerd.pl'
			}
			developer {
				id 'musketyr'
				name 'Vladimir Orany'
				email 'vladmir@orany.cz'
			}
		}
	}
	dependencies.findAll { it.groupId == 'org.gradle.api.plugins' && it.artifactId == 'gradle-appengine-plugin' }*.scope = 'provided'
	dependencies.removeAll(dependencies.findAll { it.scope == 'test' })
}

codenarc {
	configFile = file('config/codenarc/rulesets.groovy')
}
